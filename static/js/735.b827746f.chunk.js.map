{"version":3,"file":"static/js/735.b827746f.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/FilmInfo/styles.module.css?73b0","components/FilmInfo/FilmInfo.jsx","pages/MovieDetailStyled.jsx","pages/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","servises/fetchApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"filminfo\":\"styles_filminfo__P4v9j\",\"thumb\":\"styles_thumb__ssFwS\",\"genres\":\"styles_genres__uVNGE\",\"subtitle\":\"styles_subtitle__MAxW-\",\"addInfo\":\"styles_addInfo__gqLj1\"};","import { NavLink } from 'react-router-dom';\nimport styles from './styles.module.css';\n\nexport const FinmInfo = ({movieInfo, backLocation}) => {\n    const {title, popularity, overview, poster_path, genres} = movieInfo;\n    return <>\n            <div className={styles.filminfo}>\n                <div className={styles.thumb}>\n                    <img src={poster_path} width='250' alt=\"title\"/>\n                </div>\n                <div>\n                    <h2>{title}</h2>\n                    <p>{`User score ${popularity}`}</p>\n                    <p className={styles.subtitle}>Overview</p>\n                    <p>{overview}</p>\n                    <p className={styles.subtitle}>Genres</p>\n                    <p className={styles.genres}>\n                        {genres.map(({name, id}) => <span key={id}>{name}</span>)}\n                    </p>\n                </div>\n            </div>\n            <div className={styles.addInfo}>\n                <p>Aditional information</p>\n                <ul>\n                    <li>\n                        <NavLink to=\"cast\" state={backLocation}>Cast</NavLink>\n                    </li>\n                    <li>\n                        <NavLink to=\"reviews\" state={backLocation}>Reviews</NavLink>\n                    </li>\n                </ul>\n            </div>\n        </>\n}","import styled from 'styled-components';\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledLink = styled(NavLink)`\n    margin-bottom: 10px;\n    margin-left: 10px;\n    padding: 5px;\n    display: inline-block;\n    text-decoration: none;\n    color: black;\n    &:visited{\n        color: black;\n    }\n    border: 1px solid black;\n    border-radius: 10px;\n    box-shadow: 0px 0px 2px black;\n    &:hover{\n        box-shadow: 0px 0px 5px black;\n    }\n`","import { useState, useEffect, Suspense } from \"react\";\nimport { useParams, useLocation, Outlet } from \"react-router-dom\";\nimport { FinmInfo } from \"components/FilmInfo/FilmInfo.jsx\";\nimport { StyledLink } from \"./MovieDetailStyled\";\nimport { api } from \"servises/fetchApi.jsx\";\nimport { Loader } from \"components/Loader/Loader.jsx\";\n\nconst MovieDetails = ({isLoading}) => {\n    const location = useLocation();\n    const {movieId} = useParams();\n    const [movieInfo, setMovieInfo] = useState({});\n    useEffect(() => {\n        isLoading(true);\n        api.getMovieInfo(movieId)\n        .then(data => {\n            setMovieInfo(data);\n        })\n        .catch(error => {\n            console.log(error);\n        })\n        .finally(() => {\n            isLoading(false);\n        })\n    }, [movieId, isLoading]);\n\n    return <main>\n        <StyledLink to={location.state ? location.state.from : \"/\"}>go back</StyledLink>\n        {movieInfo.title && <FinmInfo movieInfo={movieInfo} backLocation={location.state ?? \"/\"}/>}\n        <Suspense fallback={<Loader/>}>\n            <Outlet/>\n        </Suspense>\n    </main>\n}\n\nexport default MovieDetails;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import logo from \"noImage.png\";\n\nclass API_CONSTRUCTOR {\n    constructor(key = \"7cf73ae9a20e9f92c4fc22e4e8bf4150\"){\n        this.apiKey = key;\n        this.imageURL = \"https://image.tmdb.org/t/p/w500\";\n        this.allGenres = true;\n        this.genres = [];\n    }\n    async getTrendingMovies(page = 1){\n        try{\n            await this.getGenres();\n            const response = await fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${this.apiKey}&page=${page}`);\n            if(response.ok){\n                const data = await response.json();\n                return this.showMovieInfo(data);\n            }\n        }\n        catch(error){\n            console.log(error);\n        }\n    }\n    async getSearchMovie(query){\n        await this.getGenres();\n        try{\n            const response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${this.apiKey}&query=${query}`);\n            if(response.ok){\n                const data = await response.json();\n                return this.showMovieInfo(data);\n            }\n        }\n        catch(error){\n            console.log(error);\n        }\n    }\n    async getMovieInfo(id){\n        await this.getGenres();\n        try{\n            const response = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${this.apiKey}`);\n            if(response.ok){\n                const data = await response.json();\n                return this.showMovieInfo(data);\n            }\n        }\n        catch(error){\n            console.log(error);\n        }\n    }\n    async getMovieCredits(id){\n        await this.getGenres();\n        try{\n            const response = await fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${this.apiKey}`);\n            if(response.ok){\n                const data = await response.json();\n                data.cast = this.showCasts(data.cast);\n                return data;\n            }\n        }\n        catch(error){\n            console.log(error);\n        }\n    }\n    async getMovieReviews(id){\n        await this.getGenres();\n        try{\n            const response = await fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${this.apiKey}`);\n            if(response.ok){\n                const data = await response.json();\n                return data;\n            }\n        }\n        catch(error){\n            console.log(error);\n        }\n    }\n    showMovieInfo(data){\n        if(Array.isArray(data.results)){\n            data.results = data.results.map(item => {\n                item.poster_path = this.imageURL + item.poster_path;\n                item.backdrop_path = this.imageURL + item.backdrop_path;\n                item.genre_ids = this.showGenres(item.genre_ids);\n                return item;\n            })\n        }\n        else{\n            data.poster_path = this.imageURL + data.poster_path;\n            data.backdrop_path = this.imageURL + data.backdrop_path;\n            data.genre_ids = this.showGenres(data.genre_ids);\n        }\n        return data;\n    }\n    async getGenres(){\n        if(this.allGenres){\n            this.allGenres = !this.allGenres;\n            const URL = `https://api.themoviedb.org/3/genre/movie/list?api_key=${this.apiKey}`\n            const URL2 = `https://api.themoviedb.org/3/genre/tv/list?api_key=${this.apiKey}`\n            try{\n                const response = await fetch(URL);\n                if(response.ok){\n                    const data = await response.json();\n                    this.genres.push(...data.genres);\n                }\n            }\n            catch(error){\n                console.error(\"Error in getGenres\")\n                console.log(error);\n            }\n            try{\n                const response = await fetch(URL2);\n                if(response.ok){\n                    const data = await response.json();\n                    this.genres.push(...data.genres);\n                }\n            }\n            catch(error){\n                console.error(\"Error in getGenres\")\n                console.log(error);\n            }\n        }\n    }\n        showGenres(arr = []){\n        if(this.genres.length < 1){\n            return arr;\n        }\n        arr = arr.map((id) => this.genres.find(item => item.id === id).name);\n        return arr;\n    }\n    showCasts(arr = []){\n        arr = arr.map(item => {\n            if(!item.profile_path){\n                item.profile_path = logo;\n                return item;\n            }\n            item.profile_path = this.imageURL + item.profile_path;\n            return item\n        });\n        return arr\n    }\n}\n\nexport default API_CONSTRUCTOR;\nexport const api = new API_CONSTRUCTOR();"],"names":["FinmInfo","movieInfo","backLocation","title","popularity","overview","poster_path","genres","className","styles","src","width","alt","map","name","id","to","state","StyledLink","styled","NavLink","isLoading","location","useLocation","movieId","useParams","useState","setMovieInfo","useEffect","api","then","data","catch","error","console","log","finally","from","Suspense","fallback","Loader","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","API_CONSTRUCTOR","apiKey","imageURL","allGenres","page","getGenres","fetch","response","ok","json","showMovieInfo","query","cast","showCasts","Array","isArray","results","item","backdrop_path","genre_ids","showGenres","URL","URL2","push","arr","length","find","profile_path","logo"],"sourceRoot":""}